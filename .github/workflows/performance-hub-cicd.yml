---
name: cicd-performance-hub
on:
  push:
    branches: '*'
    paths:
      - 'terraform/environments/performance-hub/**'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/environments/performance-hub/**'
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true
defaults:
  run:
    shell: bash
jobs:
  PR-plan-development-env:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch'
    steps:
      - name: checkout repository to use in dev
        uses: actions/checkout@v2.3.4
      - name: load and configure Terraform for dev
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.4
          terraform_wrapper: false
      - name: dev-deploy-terraform-plan
        run: |
          echo "Terraform plan - dev"
          #CONFIGURE TERRAFORM AND WORKSPACE
          bash scripts/terraform-init.sh terraform/environments/performance-hub
          terraform -chdir="terraform/environments/core-vpc" workspace select "performance-hub-${TF_ENV}"
          bash scripts/terraform-plan.sh terraform/environments/performance-hub
        env:
          TF_ENV: preproduction

  # PR-deploy-to-development-env:
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch'
  #   steps:
  #     - name: checkout repository to use in dev
  #       uses: actions/checkout@v2.3.4
  #     - name: load and configure Terraform for dev
  #       uses: hashicorp/setup-terraform@v1.4.0
  #       with:
  #         terraform_version: 0.15.4
  #         terraform_wrapper: false
  #     - name: dev-deploy-terraform-init
  #       run: echo "Terraform init - "
  #            bash scripts/terraform-init.sh terraform/environments/performance-hub
  #     - name: dev-deploy-terraform-apply
  #       run: echo "Terraform apply - dev"
  #            bash scripts/terraform-apply.sh terraform/environments/performance-hub
  # PR-deploy-to-test-env:
  #   runs-on: ubuntu-latest
  #   if: github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch'
  #   needs: [PR-deploy-to-development]
  #   environment:
  #     name: cicd-performance-hub-test-env
  #   steps:
  #     - name: checkout repository to use in test
  #       uses: actions/checkout@v2.3.4
  #     - name: load and configure Terraform for test
  #       uses: hashicorp/setup-terraform@v1.4.0
  #       with:
  #         terraform_version: 0.15.4
  #         terraform_wrapper: false
  #     - name: test-deploy-terraform-init
  #       run: echo "Terraform init - test"
  #     - name: test-deploy-terraform-plan
  #       run: echo "Terraform plan - test"
  #     - name: test-deploy-terraform-appy
  #       run: echo "Terraform apply - test"
  # PR-deploy-to-preproduction-env:
  #   runs-on: ubuntu-latest
  #   if: github.event.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
  #   environment:
  #     name: performance-hub-preproduction
  #   steps:
  #     - name: checkout repository to use in preproduction
  #       uses: actions/checkout@v2.3.4
  #     - name: load and configure Terraform for preproduction
  #       uses: hashicorp/setup-terraform@v1.4.0
  #       with:
  #         terraform_version: 0.15.4
  #         terraform_wrapper: false
  #     - name: preproduction-deploy-terraform-init
  #       run: echo "Terraform init - preproduction"
  #            bash scripts/terraform-init.sh terraform/environments/performance-hub
  #     - name: preproduction-deploy-terraform-apply
  #       run: echo "Terraform apply - preproduction"
  #            bash scripts/terraform-apply.sh terraform/environments/performance-hub
  # PR-deploy-to-production-env:
  #   runs-on: ubuntu-latest
  #   if: github.event.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
  #   needs: [PR-deploy-to-preproduction]
  #   environment:
  #     name: performance-hub-production
  #   steps:
  #     - name: checkout repository to use in production
  #       uses: actions/checkout@v2.3.4
  #     - name: load and configure Terraform for production
  #       uses: hashicorp/setup-terraform@v1.4.0
  #       with:
  #         terraform_version: 0.15.4
  #         terraform_wrapper: false
  #     - name: production-deploy-terraform-init
  #       run: echo "Terraform init - production"
  #            bash scripts/terraform-init.sh terraform/environments/performance-hub
  #     - name: production-deploy-terraform-appy
  #       run: echo "Terraform apply - production"
  #            bash scripts/terraform-apply.sh terraform/environments/performance-hub
